var documenterSearchIndex = {"docs":
[{"location":"lib/models.html#Net-Crop-Model","page":"Models","title":"Net Crop Model","text":"","category":"section"},{"location":"lib/models.html","page":"Models","title":"Models","text":"Model for estimating national net crop from survey data. Adapted in a reduced form from Bertozzi-Villa, 2021.","category":"page"},{"location":"lib/models.html","page":"Models","title":"Models","text":"monthly_reduced_itn\nmodel_evolve_forward","category":"page"},{"location":"lib/models.html#NetCropModel.monthly_reduced_itn","page":"Models","title":"NetCropModel.monthly_reduced_itn","text":"monthly_reduced_itn(YEARS_ANNUAL, MONTHS_MONTHLY,\n                                DELIVERIES_ANNUAL, DISTRIBUTION_ANNUAL,\n                                NET_CROP_MONTHLY; \n                                monthly_p = nothing)\n\nFunction of statistical evolution model for net crop component of the stock and flow model. This function uses the @model macro to pass the function into the Sampler construction in Turing.jl. The variable monthly_p contains real values for the relative proportions of each annual distribution quota that is distributed in each given month.\n\n\n\n\n\n","category":"function"},{"location":"lib/models.html#NetCropModel.model_evolve_forward","page":"Models","title":"NetCropModel.model_evolve_forward","text":"model_evolve_forward(YEARS_ANNUAL, MONTHS_MONTHLY,\n                            DELIVERIES_ANNUAL, DISTRIBUTION_ANNUAL; \n                            monthly_p = nothing, \n                            ϕ_est = 0.5, b_est = 2, k_est = 4)\n\nForward simulation of the net crop model as above. Requires parameter values for phi, b and k to run. By default, these are set to 0.5, 2 and 4 respectively. If no 'monthly_p' vector is given, a uniform monthly distribution is assumed. Returns a time series as a vector of real numbers of the estimated national net crop.\n\n\n\n\n\n","category":"function"},{"location":"lib/models.html#Net-Access-Model","page":"Models","title":"Net Access Model","text":"","category":"section"},{"location":"lib/models.html","page":"Models","title":"Models","text":"H_to_access\nmodel_prop_h_nonets\nmodel_prop_h_meannets\nsample_net_access","category":"page"},{"location":"lib/models.html#NetAccessModel.H_to_access","page":"Models","title":"NetAccessModel.H_to_access","text":"H_to_access(H::Matrix)\n\nThis function takes in a matrix of household counts with h_max rows, and n_max-1 columns. Normalises the entries of H to produce a row stochastic matrix hatH of probabilities on a per individual basis, and subsequently uses it to calulate the net access lambda_textaccess.\n\n\n\n\n\n","category":"function"},{"location":"lib/models.html#NetAccessModel.model_prop_h_nonets","page":"Models","title":"NetAccessModel.model_prop_h_nonets","text":"model_prop_h_nonets(emplogit_ρ_h_aggregated::Matrix, γ_aggregated::Matrix)\n\nTuring PPL model for modelling the rho_h, the proportion of households of size h that have no nets available.  emplogit_ρ_h_aggregated is a matrix of h_max where each row corresponds to a single DHS survey. γ_aggregated is a vector of net per capita values ∈ (0,1) corresponding to the survey of each row in emplogit_ρ_h_aggregated. The regression is modelled with a hierarchical model based on the Bertozzi-Villa and Bhatts model given as follows:\n\nbeginaligned\n    beta_0 sim textUniform(-5050)\n    beta_1 sim textUniform(-33)\n    beta_2 sim textUniform(-11)\n    beta_3 sim textUniform(-100100)\n    beta_4 sim textUniform(-300300)\n    beta_5 sim textUniform(-300300)\n    tau_rho sim textGamma(0101)\n    nu_h = beta_0 + beta_1 h + beta_2 h^2 + beta_3 gamma + beta_4 gamma^2 + beta_5 gamma^3\n    textemplogit(rho_h) sim textNormal(nu_h tau_rho)\nendaligned\n\n\n\n\n\n","category":"function"},{"location":"lib/models.html#NetAccessModel.model_prop_h_meannets","page":"Models","title":"NetAccessModel.model_prop_h_meannets","text":"model_prop_h_meannets(μ_h_aggregated::Matrix, γ_aggregated::Vector)\n\nTuring PPL model for modelling the mu_h, the mean number of net in households of size h. Similar to the Bhatt paper, the mean is subsequently used to model entries of the probability matrix H  as a zero truncated Poisson distribution. Inputs are matrix of aggregated empirical survey values.  μ_h_aggregated is a matrix of h_max where each row corresponds to a single DHS survey. γ_aggregated is a vector of net per capita values ∈ (0,1) corresponding to the survey of each row in μ_h_aggregated.\n\nbeginaligned\n    beta_0 sim textUniform(-5050)\n    beta_1 sim textUniform(-33)\n    beta_2 sim textUniform(-1010)\n    beta_3 sim textUniform(-5050)\n    beta_4 sim textUniform(-5050)\n    beta_5 sim textUniform(-5050)\n    tau_mu sim textGamma(0101)\n    barmu = beta_0 + beta_1 h + beta_2 sqrth + beta_3 gamma + beta_4 gamma^2 + beta_5 h gamma\n    mu_h sim textNormal(barmu tau_mu)\nendaligned\n\n\n\n\n\n","category":"function"},{"location":"lib/models.html#NetAccessModel.sample_net_access","page":"Models","title":"NetAccessModel.sample_net_access","text":"sample_net_access(ρ_chain_df::DataFrame, μ_chain_df::DataFrame, p_h::Vector,\n                        POPULATION_MONTHLY::Vector, Γ_MONTHLY_samples::Matrix;\n                        n_max = 20)\n\nThis function is used to generate posterior draws of net access time series conditioned on a set of posterior samples of monthly net crop. The inputs are defined as:\n\nρ_chain_df: A DataFrame of MCMC chain draws for the parameters to calculate rho_h\nμ_chain_df: A DataFrame of MCMC chain draws for the parameters to calculate mu_h\np_h: A vector of probabilities of length h_max for the proportion of people with household size h\nPOPULATION_MONTHLY: Monthly estimated time series of population. \nΓ_MONTHLY_samples: N times m matrix of net crop posterior time series draws where M_ij is the net crop of the i^th sample time series in month m.\nn_max: Maximum number of a nets one can expect in a give household. Default limit is 20.\n\n\n\n\n\n","category":"function"},{"location":"lib/models.html","page":"Models","title":"Models","text":"Pages = [\"models.md\"]","category":"page"},{"location":"lib/description_spatial.html#Spatial-Latent-Gaussian-Models","page":"Spatial LGM","title":"Spatial Latent Gaussian Models","text":"","category":"section"},{"location":"lib/description_spatial.html","page":"Spatial LGM","title":"Spatial LGM","text":"NEED TO CONSULT WITH TAS FOR MORE INFORMATION ON HOW R-INLA WORKS. IMPLEMENTATION NEEDED.","category":"page"},{"location":"lib/description_access.html#Net-Access","page":"Net Access","title":"Net Access","text":"","category":"section"},{"location":"lib/description_access.html","page":"Net Access","title":"Net Access","text":"Structure","category":"page"},{"location":"lib/description_access.html","page":"Net Access","title":"Net Access","text":"Define net access\nSimplest naive net access\nDescribe relevance to pipeline\nWhy construct a model of net access\nWhy fit a global model? -> Data Sparsity\nModified equation\nStochastic Models\nGive overview on zero truncated poisson and equations formulae\nModel Equations\nModel Parameters\nRelevant probability and Matrix Counts\nImplementation\nGo through workflow process\nData aggregation and final description\nPPL Model defining and fitting. Why use NUTS? -> Differentiable\nEstimation\nCalculating Net Access from Net Crop Time Series","category":"page"},{"location":"lib/logit.html#Logit-Transformation","page":"Logit Transformations","title":"Logit Transformation","text":"","category":"section"},{"location":"lib/logit.html","page":"Logit Transformations","title":"Logit Transformations","text":"Functions to perform empirical logit transformation.","category":"page"},{"location":"lib/logit.html","page":"Logit Transformations","title":"Logit Transformations","text":"emplogit\ninv_emplogit","category":"page"},{"location":"lib/logit.html#Logit.emplogit","page":"Logit Transformations","title":"Logit.emplogit","text":"emplogit(x; ϵ = 0.001)\n\nFunction that calculates the empirical logit transform of x.\n\n\n\n\n\n","category":"function"},{"location":"lib/logit.html#Logit.inv_emplogit","page":"Logit Transformations","title":"Logit.inv_emplogit","text":"inv_emplogit(x; ϵ = 0.001)\n\nInverse of emplogit()\n\n\n\n\n\n","category":"function"},{"location":"lib/logit.html","page":"Logit Transformations","title":"Logit Transformations","text":"Pages = [\"net_loss.md\"]","category":"page"},{"location":"lib/description_SNF.html#Net-Crop-Stock-and-Flow-(SNF)","page":"Net Crop SNF","title":"Net Crop Stock and Flow (SNF)","text":"","category":"section"},{"location":"lib/description_SNF.html","page":"Net Crop SNF","title":"Net Crop SNF","text":"The net crop stock and flow (SNF) component of the model infers estimated values of national net crop based on reported net delivery data (organisations to governments), distribution data (governments to communities) and household survey data (actual reported net access and usage). This model is also used to learn the failure behaviour of insecticide treated nets (ITNs) and their variances across different countries.","category":"page"},{"location":"lib/description_SNF.html#Compartmental-Stock-and-Flow-(SNF)","page":"Net Crop SNF","title":"Compartmental Stock and Flow (SNF)","text":"","category":"section"},{"location":"lib/description_SNF.html#Upsampling-and-Inferring-Monthly-Distribution","page":"Net Crop SNF","title":"Upsampling and Inferring Monthly Distribution","text":"","category":"section"},{"location":"lib/description_SNF.html#Model-Fitting","page":"Net Crop SNF","title":"Model Fitting","text":"","category":"section"},{"location":"lib/description_SNF.html#Net-Access-Interpolation","page":"Net Crop SNF","title":"Net Access Interpolation","text":"","category":"section"},{"location":"lib/description_SNF.html","page":"Net Crop SNF","title":"Net Crop SNF","text":"Structure","category":"page"},{"location":"lib/description_SNF.html","page":"Net Crop SNF","title":"Net Crop SNF","text":"Aim of section -> To estimate net crop at any given year\nCompartmental Stock and Flow (SNF)\nNet Crop Model and Matching Distribution\nUpsampling to monthly resolution -> Inferring distribution times\nModel Fitting and Bayesian Inference\nRWMH MCMC for parameters in stock and flow\nGradient Descent with custom loss function for monthly distribution weights\nNeed to justify reason for DIC\nIterative scheme until convergence\nITN Net Access Interpolation\nHow to generate forward -> Go through with code","category":"page"},{"location":"lib/data_extractions.html#Data-Extractions","page":"Data Extraction","title":"Data Extractions","text":"","category":"section"},{"location":"lib/data_extractions.html","page":"Data Extraction","title":"Data Extraction","text":"Functions to extract data from pre-declared filepaths. NEED TO IMPLEMENT CODE TO READ FROM AN INPUT CONFIG FILE.","category":"page"},{"location":"lib/data_extractions.html","page":"Data Extraction","title":"Data Extraction","text":"extract_data_netcrop\nextract_data_netaccess","category":"page"},{"location":"lib/data_extractions.html#DataExtractions.extract_data_netcrop","page":"Data Extraction","title":"DataExtractions.extract_data_netcrop","text":"extract_data_netcrop(ISO::String, YEAR_START::Int64, YEAR_END::Int64)\n\nRead from pre-declared directories of CSV files and extract required raw data to perform model analysis on. Extraction code also handles the required upsampling, interpolation and averaging. Output is returned as a Dict. A copy of the extraction is also saved in the listed output directory as a JLD2 file with name format: e.g. AGO\\_2010\\_2021_extract.jld2\n\n\n\n\n\n","category":"function"},{"location":"lib/data_extractions.html#DataExtractions.extract_data_netaccess","page":"Data Extraction","title":"DataExtractions.extract_data_netaccess","text":"extract_data_netaccess(ISO::String, YEAR_START::Int64, YEAR_END::Int64)\n\nRead from pre-declared directories of CSV files and extract required raw data to perform model analysis on. Similar as extract_data() but specifically outputs data needed for calculating net access.\n\nn_max: Maximum number of nets that are considered in aggregated data\nh_max: Maximum household size that is considered in aggregated data\n\n\n\n\n\n","category":"function"},{"location":"lib/data_extractions.html","page":"Data Extraction","title":"Data Extraction","text":"Pages = [\"data_extractions.md\"]","category":"page"},{"location":"lib/outputs.html#Model-Outputs","page":"Model Outputs","title":"Model Outputs","text":"","category":"section"},{"location":"lib/outputs.html","page":"Model Outputs","title":"Model Outputs","text":"Information on the various outputs of the model that are saved","category":"page"},{"location":"lib/outputs.html#Net-Crop-Outputs","page":"Model Outputs","title":"Net Crop Outputs","text":"","category":"section"},{"location":"lib/outputs.html","page":"Model Outputs","title":"Model Outputs","text":"IN PROGRESS","category":"page"},{"location":"lib/outputs.html#Net-Access-Outputs","page":"Model Outputs","title":"Net Access Outputs","text":"","category":"section"},{"location":"lib/outputs.html","page":"Model Outputs","title":"Model Outputs","text":"IN PROGRESS","category":"page"},{"location":"lib/date_conversions.html#Date-Conversions","page":"Date Conversions","title":"Date Conversions","text":"","category":"section"},{"location":"lib/date_conversions.html","page":"Date Conversions","title":"Date Conversions","text":"These functions are used to convert between calendar years and the month indexing","category":"page"},{"location":"lib/date_conversions.html","page":"Date Conversions","title":"Date Conversions","text":"monthyear_to_monthidx\nmonthidx_to_monthyear","category":"page"},{"location":"lib/date_conversions.html#DateConversions.monthyear_to_monthidx","page":"Date Conversions","title":"DateConversions.monthyear_to_monthidx","text":"monthyear_to_monthidx(month::Int, year::Int)\n\nFunction to quickly convert month year format to generalised indexed month format. Start bounds are taken from YEAR_START\n\n\n\n\n\n","category":"function"},{"location":"lib/date_conversions.html#DateConversions.monthidx_to_monthyear","page":"Date Conversions","title":"DateConversions.monthidx_to_monthyear","text":"monthidx_to_monthyear(monthidx::Int)\n\nInverse function of monthyeartomonthidx() but returns year as an Int starting from 0.\n\n\n\n\n\n","category":"function"},{"location":"lib/date_conversions.html","page":"Date Conversions","title":"Date Conversions","text":"Pages = [\"date_conversions.md\"]","category":"page"},{"location":"SNF_Docs.html#Welcome-Page","page":"Welcome Page","title":"Welcome Page","text":"","category":"section"},{"location":"SNF_Docs.html","page":"Welcome Page","title":"Welcome Page","text":"This is the documentation for the ITN Stock and Flow (SNF) model for the Malaria Atlas Project.","category":"page"},{"location":"SNF_Docs.html","page":"Welcome Page","title":"Welcome Page","text":"Author: Eugene Tan","category":"page"},{"location":"SNF_Docs.html","page":"Welcome Page","title":"Welcome Page","text":"Last Updated: 6/8/2024 ","category":"page"},{"location":"SNF_Docs.html#Overview","page":"Welcome Page","title":"Overview","text":"","category":"section"},{"location":"SNF_Docs.html","page":"Welcome Page","title":"Welcome Page","text":"The MAP ITN model attempts to estimate the quantity, coverage and effects of insecticide treated nets within African countries. To do this, estimates regarding the actual quantities of net crop in the country are required. This model attempts to infer this from various sources of net delivery and distribution data, IMH population surveys, DHS household surveys among several others. The first iteration of this model was first proposed by Bhatt et al. (2015) and used to estimate net coverage dynamics over the years 2000-2015. This was extended upon by Bertozzi-Villa et al. (2021) to model net access. They also proposed additional measures of access gap and use gap, which are subsequently used to infer local variations in net coverage and usage, attrition times and the construction of a geospatial map of net coverage. ","category":"page"},{"location":"SNF_Docs.html","page":"Welcome Page","title":"Welcome Page","text":"This current iteration of the MAP ITN aims to clean up and refine on the Bertozzi-Villa (BV) model to be more interpretable for third-party use. Additionally, it also aims to maximise the amount of information that can be extracted from existing datasets, while extending for newer and richer incoming datasets that are of a higher quality and resolution. See below for a non-exhaustive list of aims.","category":"page"},{"location":"SNF_Docs.html","page":"Welcome Page","title":"Welcome Page","text":"Implementation Aims and Roadmap","category":"page"},{"location":"SNF_Docs.html","page":"Welcome Page","title":"Welcome Page","text":"Interpretability\nCreating full documentation for the model to allow better accessibility by third-party and successive inheritors\nDetailed write-ups on mathematics and theory of the models for future potential improvements\nDefining required structures of input datasets for future users\nExtensibility\nImplementing the model that utilises optimum languages for each component task (e.g. Julia - algorithm design, data wrangling and machine learning; R - regression, complex Bayesian models)\nOutputting intermediate and final output datasets with standardised structures and components that may be reused for other tasks and workflows.\nMathematical Extensions\nMaximising information extraction from existing datasets (movement to monthly resolution)\nIntegrating transition to analysis on new incoming datasets: higher resolution, no need for delivery data\nAdding support for multiple net types with different efficacies\nExtending analysis from national (ADMIN0) to subnational (ADMIN1)","category":"page"},{"location":"lib/regression.html#Regression-functions","page":"Regression","title":"Regression functions","text":"","category":"section"},{"location":"lib/regression.html","page":"Regression","title":"Regression","text":"Various functions to run the regression analysis and save the outputs.","category":"page"},{"location":"lib/regression.html#Net-Crop","page":"Regression","title":"Net Crop","text":"","category":"section"},{"location":"lib/regression.html","page":"Regression","title":"Regression","text":"bayes_GD\n","category":"page"},{"location":"lib/regression.html#NetCropRegression.bayes_GD","page":"Regression","title":"NetCropRegression.bayes_GD","text":"bayes_GD(input_data_dict::Dict)\n\nFunction that takes in the a dictionary of extracted data (see DataExtraction.extract_data) and performs an custom iterative fitting algorithm to identify model parameters monthly_p, phib and k. See default constant hyperparameter values for algorithm in source code. MCMC proposal mechanism is a random walk with manually tuned multivariate normal proposal distribution. Sampler is run using a combination of Turing and AdvancedMH. Returns a dictionary of the final sampled MCMC chains and fits in each iteration.\n\nNote: Output does not trim off the burn-in period and needs to be done in post. But if save_output=true (by default), then a copy of the final chain with burn-in trimmed, and the metadata is saved to the path specified by chainoutputdir. (Refer to source code for path)\n\n\n\n\n\n","category":"function"},{"location":"lib/regression.html#Net-Access","page":"Regression","title":"Net Access","text":"","category":"section"},{"location":"lib/regression.html","page":"Regression","title":"Regression","text":"bayes_access","category":"page"},{"location":"lib/regression.html#NetAccessRegression.bayes_access","page":"Regression","title":"NetAccessRegression.bayes_access","text":"bayes_access(access_survey_globaldata::Dict; iterations = 10000, burn_in = 2000, chain_output_dir = chain_output_di)\n\nFunction to perform MCMC draws of access model parameters ρ_h and μ_h using empirical survey data. Input variable access_survey_globaldata is a Dict with the following key values:\n\np_h_globaldata: Matrix of aggregated data for distribution of households of size h for each survey.\nρ_h_globaldata: Matrix of aggregated data of proportion of households of size h with no nets for each survey.\nμ_h_globaldata: Matrix of aggregated data of mean number of nets in households of size h given at least one net.\n\nDoes not return a result, but instead saves the posterior MCMC chain as DataFrames with the filename netaccesschains.jld2 in the directory indicated by chain_output_dir.\n\n\n\n\n\n","category":"function"},{"location":"lib/regression.html","page":"Regression","title":"Regression","text":"Pages = [\"regression.md\"]","category":"page"},{"location":"lib/example.html#Example-Code","page":"Example Code","title":"Example Code","text":"","category":"section"},{"location":"lib/example.html","page":"Example Code","title":"Example Code","text":"Some example code to run net crop and access predictions of the SNF model for a single country.","category":"page"},{"location":"lib/example.html","page":"Example Code","title":"Example Code","text":"Extract relevant data for net crop regression for a single country.","category":"page"},{"location":"lib/example.html","page":"Example Code","title":"Example Code","text":"# Define analysis parameters\nISO = \"SEN\"\nYEAR_START = 2010\nYEAR_END = 2021\n\n# Extract data\nextract_data_netcrop(ISO, YEAR_START, YEAR_END)\n\n# By default, output is saved into location \"outputs/extractions/crop/\"","category":"page"},{"location":"lib/example.html","page":"Example Code","title":"Example Code","text":"Perform MCMC + gradient descent regression to get required net crop parameters","category":"page"},{"location":"lib/example.html","page":"Example Code","title":"Example Code","text":"# Load saved data extraction for net crop\ninput_dict = load(\"outputs/extractions/crop/SEN_2010_2021_cropextract.jld2\")\n\n# Perform Bayesian inference + gradient descent algorithm and save the output\n# Default save location is \"outputs/regressions/crop/\"\nbayes_GD(input_dict, save_output = true, N_EPOCHS = 20)","category":"page"},{"location":"lib/example.html","page":"Example Code","title":"Example Code","text":"Extract survey data for calculating net access in later steps.","category":"page"},{"location":"lib/example.html","page":"Example Code","title":"Example Code","text":"# Load saved data for net crop\ninput_dict = load(\"outputs/extractions/crop/SEN_2010_2021_cropextract.jld2\")\nregression_dict = load(\"outputs/regressions/crop/SEN_2010_2021_cropchains.jld2\")\n\n# Extract required survey data for net access. \n# Default save location is \"outputs/extractions/access/\"\nextract_data_netaccess(ISO, YEAR_START, YEAR_END, input_dict, regression_dict)","category":"page"},{"location":"lib/example.html","page":"Example Code","title":"Example Code","text":"Extract and aggregate all the survey estimates for net access parameters.","category":"page"},{"location":"lib/example.html","page":"Example Code","title":"Example Code","text":"Note: this only needs to be done once and requires access to the 'regression_dict' files for all countries due to sparsity of data.","category":"page"},{"location":"lib/example.html","page":"Example Code","title":"Example Code","text":"# Aggregate survey data for regressing net access parameters and save .jld2\ninit_variables = false\n\n# Pre-define storage variables. Dimensions are not important here and will be defined later.\np_h_globaldata = zeros(0,10)\nρ_h_globaldata = zeros(0,10)\nμ_h_globaldata = zeros(0,10)\nγ_globaldata = zeros(0)\n\n# List of countries to exclude due to errors (e.g. NaNs, data format etc.)\nexclusion_ISOs = [\"CPV\",\"BWA\",\"CAF\",\"COM\",\"GNQ\",\"DJI\",\"ERI\",\"ETH\",\"GAB\",\"GNB\",\n                    \"STP\",\"SOM\",\"SDN\",\"SWZ\",\"ZAF\",\"SSD\"]\n\nfor i in 1:length(ISO_list)\n    # Select ISO\n    ISO = ISO_list[i]\n\n    if ISO ∈ exclusion_ISOs # Choose which countries to exclude in extraction.\n        continue\n    else\n        # Import extracted data\n        net_access_input_dict = load(\"outputs/extractions/access/$(ISO)_2010_2021_accessextract.jld2\")\n        \n        γ_surveys = net_access_input_dict[\"γ_aggregated\"]\n        p_h = net_access_input_dict[\"p_h_aggregated\"]\n        ρ_h = net_access_input_dict[\"ρ_h_aggregated\"]\n        μ_h = net_access_input_dict[\"μ_h_aggregated\"]\n        \n        h_max = size(p_h)[2]\n        # Check if storage variable for aggregated global data has been made.\n        if init_variables == false\n            p_h_globaldata = zeros(0,h_max)\n            ρ_h_globaldata = zeros(0,h_max)\n            μ_h_globaldata = zeros(0,h_max)\n            γ_globaldata = zeros(0)\n\n            init_variables = true\n        end\n\n        # Add to aggregate storage variable\n        p_h_globaldata = vcat(p_h_globaldata, p_h)\n        ρ_h_globaldata = vcat(ρ_h_globaldata, ρ_h)\n        μ_h_globaldata = vcat(μ_h_globaldata, μ_h)\n        γ_globaldata = vcat(γ_globaldata, γ_surveys)\n    end\nend\n\n# Save aggregated data\njldsave(\"outputs/extractions/access/aggregated_inputs/netaccess_allsurvey_inputs.jld2\";\n            p_h_globaldata, ρ_h_globaldata, μ_h_globaldata, γ_globaldata)","category":"page"},{"location":"lib/example.html","page":"Example Code","title":"Example Code","text":"Perform MCMC regression for net access model","category":"page"},{"location":"lib/example.html","page":"Example Code","title":"Example Code","text":"# MCMC Regression for Net Access model\n# Default save location is \"output/extractions/access/aggregated_inputs/netaccesschains.jld2\"\nbayes_access(access_survey_globaldata;\n                iterations = 10000, burn_in = 2000,\n                chain_output_dir = chain_output_dir)\nprintln(\"Analysis Complete. Check directory for outputs.\")","category":"page"},{"location":"lib/example.html","page":"Example Code","title":"Example Code","text":"Feed results into plotting functions for visualisation if required. ","category":"page"},{"location":"lib/net_loss.html#Net-Attrition","page":"Net Attrition","title":"Net Attrition","text":"","category":"section"},{"location":"lib/net_loss.html","page":"Net Attrition","title":"Net Attrition","text":"Various loss functions and their inverses for calculating attrition of ITNs in model.","category":"page"},{"location":"lib/net_loss.html#Bertozzi-Villa-Model","page":"Net Attrition","title":"Bertozzi-Villa Model","text":"","category":"section"},{"location":"lib/net_loss.html","page":"Net Attrition","title":"Net Attrition","text":"net_loss_compact\nnet_life_compact","category":"page"},{"location":"lib/net_loss.html#NetLoss.net_loss_compact","page":"Net Attrition","title":"NetLoss.net_loss_compact","text":"net_loss_compact(t::Float64, τ::Float64; κ = 20, precis_threshold = 1e-6)\n\nCompute the survival rate α based on the compact ITN loss function based on Bertozzi-Villa, 2021.\n\nmathcalL = e^kappa left( 1 - frac11-left(fracttauright)^2 right)\n\nDefault value of scale parameter is kappa = 20, default rounding precision is 1e-6.\n\nArguments\n\nt: the time elapsed in years\nτ: characteristic time scale of the sigmoidal function\n\n\n\n\n\n","category":"function"},{"location":"lib/net_loss.html#NetLoss.net_life_compact","page":"Net Attrition","title":"NetLoss.net_life_compact","text":"net_life_compact(α::Float64, τ::Float64; κ = 20, precis_threshold = 1e-6)\n\nInverse function of net_loss used to compute the α survival lifetime for ITN nets.\n\nDefault value of scale parameter is κ = 20, default rounding precision is 1e-6.\n\nArguments\n\nα: proportion of nets survived\nτ: characteristic time scale of the sigmoidal function\n\n\n\n\n\n","category":"function"},{"location":"lib/net_loss.html#Modified-Exponential-model","page":"Net Attrition","title":"Modified Exponential model","text":"","category":"section"},{"location":"lib/net_loss.html","page":"Net Attrition","title":"Net Attrition","text":"net_loss_exp\nnet_life_exp","category":"page"},{"location":"lib/net_loss.html#NetLoss.net_loss_exp","page":"Net Attrition","title":"NetLoss.net_loss_exp","text":"net_loss_exp(t::Float64, τ_max::Float64; κ_squared = 20, precis_threshold = 1e-6)\n\nCompute the survival rate α based on the a modified loss function based on Bertozzi-Villa\n\nmathcalL = e^kappa^2 left( 1 - frac11-left(fracttau_textmaxright)^2 right)\n\nwhere kappa is given by the function kappa_coeff and is defined as\n\nkappa = fraclog(alpha) 1 - frac1 1 - left( frac tau_textmin  tau_textmax  right)^2  \n\n\n\n\n\n","category":"function"},{"location":"lib/net_loss.html#NetLoss.net_life_exp","page":"Net Attrition","title":"NetLoss.net_life_exp","text":"net_life_exp(α::Float64, τ_max::Float64; κ_squared = 20, precis_threshold = 1e-6)\n\nInverse function for the modified exponential model\n\n\n\n\n\n","category":"function"},{"location":"lib/net_loss.html#Weibull-model","page":"Net Attrition","title":"Weibull model","text":"","category":"section"},{"location":"lib/net_loss.html","page":"Net Attrition","title":"Net Attrition","text":"net_loss_weibull\nnet_life_weibull","category":"page"},{"location":"lib/net_loss.html#NetLoss.net_loss_weibull","page":"Net Attrition","title":"NetLoss.net_loss_weibull","text":"net_loss_weibull(t::Float64, b::Float64, k::Float64; precis_threshold = 1e-6)\n\nTwo parameter Weibull loss model for net attrition given by\n\nmathcalL = e^-left( fractb right)^k \n\n\n\n\n\n","category":"function"},{"location":"lib/net_loss.html#NetLoss.net_life_weibull","page":"Net Attrition","title":"NetLoss.net_life_weibull","text":"net_life_weibull(α::Float64, b::Float64, k::Float64)\n\nInverse function for the Weibull model\n\n\n\n\n\n","category":"function"},{"location":"lib/net_loss.html","page":"Net Attrition","title":"Net Attrition","text":"Pages = [\"net_loss.md\"]","category":"page"},{"location":"lib/plotting_functions.html#Plotting-Functions","page":"Plotting Functions","title":"Plotting Functions","text":"","category":"section"},{"location":"lib/plotting_functions.html","page":"Plotting Functions","title":"Plotting Functions","text":"Some some convenience functions to construct plots based on the output .jld2 files from the modelling pipeline.","category":"page"},{"location":"lib/plotting_functions.html","page":"Plotting Functions","title":"Plotting Functions","text":"regression_timeseries_plot\nnetlife_posterior_draws\nlifecurve_plots","category":"page"},{"location":"lib/plotting_functions.html#PlottingFunctions.regression_timeseries_plot","page":"Plotting Functions","title":"PlottingFunctions.regression_timeseries_plot","text":"regression_timeseries_plot(input_dict::Dict, regression_dict::Dict, net_access_input_dict::Dict, net_access_chain::Dict, n_samples = 100, kwargs...)\n\nTakes in data extraction and regression results dictionaries from pipeline functions and returns a tuple of figures.\n\nA plot of net crop, net access, and inferred distribution proportion monthly_p with confidence bounds\nA plot of net crop stratified by age measured in quarters, with a maximum age of max_age_quarters (default = 16)\n\nOther notable arguments\n\nn_samples: Number of samples to randomly draw from calculate time series. (default = 100)\n\n\n\n\n\n","category":"function"},{"location":"lib/plotting_functions.html#PlottingFunctions.netlife_posterior_draws","page":"Plotting Functions","title":"PlottingFunctions.netlife_posterior_draws","text":"netlife_posterior_draws(regression_dict::Dict; t_vals = 0:0.01:5)\n\nCalculate posterior draws of the survival curve based on the MCMC chain of the net crop model. Returns two outputs\n\nlifecurve_quantiles: 5%, 50% and 95% lifecurve profiles given in a (3, length(t_vals)) matrix.\nhalflife_quantiles: 5%, 50% and 95% quantiles of the net half life.\n\n\n\n\n\n","category":"function"},{"location":"lib/plotting_functions.html#PlottingFunctions.lifecurve_plots","page":"Plotting Functions","title":"PlottingFunctions.lifecurve_plots","text":"lifecurve_plots(ISO::String, lifecurve_quantiles::Matrix, halflife_quantiles::Vector; t_vals = 0:0.01:5, kwargs...)\n\nTakes in the outputs of netlife_posterior draws and returns a plot of the attrition curve.\n\n\n\n\n\n","category":"function"},{"location":"lib/plotting_functions.html","page":"Plotting Functions","title":"Plotting Functions","text":"Pages = [\"plotting_functions.md\"]","category":"page"},{"location":"lib/inputs.html#Model-Inputs","page":"Model Inputs","title":"Model Inputs","text":"","category":"section"},{"location":"lib/inputs.html","page":"Model Inputs","title":"Model Inputs","text":"Information on the various inputs needed for the model and items that are extracted using the extract_data command.","category":"page"},{"location":"lib/inputs.html#Raw-Input-Formats","page":"Model Inputs","title":"Raw Input Formats","text":"","category":"section"},{"location":"lib/inputs.html#National-Deliveries","page":"Model Inputs","title":"National Deliveries","text":"","category":"section"},{"location":"lib/inputs.html","page":"Model Inputs","title":"Model Inputs","text":"IN PROGRESS","category":"page"},{"location":"lib/inputs.html#National-Distributions","page":"Model Inputs","title":"National Distributions","text":"","category":"section"},{"location":"lib/inputs.html","page":"Model Inputs","title":"Model Inputs","text":"IN PROGRESS","category":"page"},{"location":"lib/inputs.html#National-Population","page":"Model Inputs","title":"National Population","text":"","category":"section"},{"location":"lib/inputs.html","page":"Model Inputs","title":"Model Inputs","text":"IN PROGRESS","category":"page"},{"location":"lib/inputs.html#Household-Surveys","page":"Model Inputs","title":"Household Surveys","text":"","category":"section"},{"location":"lib/inputs.html","page":"Model Inputs","title":"Model Inputs","text":"IN PROGRESS","category":"page"},{"location":"lib/inputs.html#Country-Codes","page":"Model Inputs","title":"Country Codes","text":"","category":"section"},{"location":"lib/inputs.html","page":"Model Inputs","title":"Model Inputs","text":"IN PROGRESS","category":"page"},{"location":"lib/inputs.html#extract_data-Outputs","page":"Model Inputs","title":"extract_data Outputs","text":"","category":"section"},{"location":"lib/inputs.html","page":"Model Inputs","title":"Model Inputs","text":"IN PROGRESS","category":"page"}]
}
